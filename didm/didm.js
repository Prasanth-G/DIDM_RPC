/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.DistributedDownloadRequest');
goog.provide('proto.DownloadRequest');
goog.provide('proto.DownloadResponse');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DistributedDownloadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DistributedDownloadRequest.repeatedFields_, null);
};
goog.inherits(proto.DistributedDownloadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DistributedDownloadRequest.displayName = 'proto.DistributedDownloadRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DistributedDownloadRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DistributedDownloadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.DistributedDownloadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DistributedDownloadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DistributedDownloadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    link: jspb.Message.getFieldWithDefault(msg, 1, ""),
    saveto: jspb.Message.getFieldWithDefault(msg, 2, ""),
    saveas: jspb.Message.getFieldWithDefault(msg, 3, ""),
    peeripaddrList: jspb.Message.getRepeatedField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DistributedDownloadRequest}
 */
proto.DistributedDownloadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DistributedDownloadRequest;
  return proto.DistributedDownloadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DistributedDownloadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DistributedDownloadRequest}
 */
proto.DistributedDownloadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaveto(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaveas(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addPeeripaddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DistributedDownloadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DistributedDownloadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DistributedDownloadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DistributedDownloadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSaveto();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSaveas();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPeeripaddrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string link = 1;
 * @return {string}
 */
proto.DistributedDownloadRequest.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.DistributedDownloadRequest.prototype.setLink = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string saveto = 2;
 * @return {string}
 */
proto.DistributedDownloadRequest.prototype.getSaveto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.DistributedDownloadRequest.prototype.setSaveto = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string saveas = 3;
 * @return {string}
 */
proto.DistributedDownloadRequest.prototype.getSaveas = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.DistributedDownloadRequest.prototype.setSaveas = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string peerIPAddr = 4;
 * @return {!Array<string>}
 */
proto.DistributedDownloadRequest.prototype.getPeeripaddrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.DistributedDownloadRequest.prototype.setPeeripaddrList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.DistributedDownloadRequest.prototype.addPeeripaddr = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.DistributedDownloadRequest.prototype.clearPeeripaddrList = function() {
  this.setPeeripaddrList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DownloadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DownloadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DownloadRequest.displayName = 'proto.DownloadRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DownloadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.DownloadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DownloadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DownloadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    link: jspb.Message.getFieldWithDefault(msg, 1, ""),
    start: jspb.Message.getFieldWithDefault(msg, 2, 0),
    end: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DownloadRequest}
 */
proto.DownloadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DownloadRequest;
  return proto.DownloadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DownloadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DownloadRequest}
 */
proto.DownloadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStart(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DownloadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DownloadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DownloadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DownloadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string link = 1;
 * @return {string}
 */
proto.DownloadRequest.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.DownloadRequest.prototype.setLink = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 start = 2;
 * @return {number}
 */
proto.DownloadRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.DownloadRequest.prototype.setStart = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 end = 3;
 * @return {number}
 */
proto.DownloadRequest.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.DownloadRequest.prototype.setEnd = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DownloadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.DownloadResponse.oneofGroups_);
};
goog.inherits(proto.DownloadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DownloadResponse.displayName = 'proto.DownloadResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.DownloadResponse.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.DownloadResponse.RequestreceivedCase = {
  REQUESTRECEIVED_NOT_SET: 0,
  DDREQUEST: 2,
  DREQUEST: 3
};

/**
 * @return {proto.DownloadResponse.RequestreceivedCase}
 */
proto.DownloadResponse.prototype.getRequestreceivedCase = function() {
  return /** @type {proto.DownloadResponse.RequestreceivedCase} */(jspb.Message.computeOneofCase(this, proto.DownloadResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DownloadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DownloadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DownloadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DownloadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    ddrequest: (f = msg.getDdrequest()) && proto.DistributedDownloadRequest.toObject(includeInstance, f),
    drequest: (f = msg.getDrequest()) && proto.DownloadRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DownloadResponse}
 */
proto.DownloadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DownloadResponse;
  return proto.DownloadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DownloadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DownloadResponse}
 */
proto.DownloadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = new proto.DistributedDownloadRequest;
      reader.readMessage(value,proto.DistributedDownloadRequest.deserializeBinaryFromReader);
      msg.setDdrequest(value);
      break;
    case 3:
      var value = new proto.DownloadRequest;
      reader.readMessage(value,proto.DownloadRequest.deserializeBinaryFromReader);
      msg.setDrequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DownloadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DownloadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DownloadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DownloadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getDdrequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.DistributedDownloadRequest.serializeBinaryToWriter
    );
  }
  f = message.getDrequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.DownloadRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.DownloadResponse.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.DownloadResponse.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.DownloadResponse.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/** @param {!(string|Uint8Array)} value */
proto.DownloadResponse.prototype.setData = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional DistributedDownloadRequest DDRequest = 2;
 * @return {?proto.DistributedDownloadRequest}
 */
proto.DownloadResponse.prototype.getDdrequest = function() {
  return /** @type{?proto.DistributedDownloadRequest} */ (
    jspb.Message.getWrapperField(this, proto.DistributedDownloadRequest, 2));
};


/** @param {?proto.DistributedDownloadRequest|undefined} value */
proto.DownloadResponse.prototype.setDdrequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.DownloadResponse.oneofGroups_[0], value);
};


proto.DownloadResponse.prototype.clearDdrequest = function() {
  this.setDdrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DownloadResponse.prototype.hasDdrequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DownloadRequest DRequest = 3;
 * @return {?proto.DownloadRequest}
 */
proto.DownloadResponse.prototype.getDrequest = function() {
  return /** @type{?proto.DownloadRequest} */ (
    jspb.Message.getWrapperField(this, proto.DownloadRequest, 3));
};


/** @param {?proto.DownloadRequest|undefined} value */
proto.DownloadResponse.prototype.setDrequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.DownloadResponse.oneofGroups_[0], value);
};


proto.DownloadResponse.prototype.clearDrequest = function() {
  this.setDrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DownloadResponse.prototype.hasDrequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


